version: "3"

services:

  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - '2181:2181'
      
  kafka:
    image: bitnami/kafka:3.4
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - 9092:9092

  kafka-consumer-dev:  # only for development purposes
    build: ./kafka_consumer_dev
    image: kafka-consumer-dev:0.1
    container_name: kafka-consumer-dev
    depends_on:
      - kafka

  kafka-producer:
    build: ./kafka
    image: kafka-producer:0.1
    container_name: kafka-producer
    depends_on:
      - kafka
      - spark-submit
      - logstash
    environment:
      - FILE_PATH_TRUMP
      - FILE_PATH_BIDEN
    volumes:
      - ./data:${DATA_PATH}:ro,Z

  spark-master:
    image: bitnami/spark:${SPARK_VERSION}
    container_name: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - '8080:8080'
      - '7077:7077'

  spark-worker:
    image: bitnami/spark:${SPARK_VERSION}
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
    ports:
      - '8081:8081'

  spark-submit:
    build:
      context: ./spark
      args:
        SPARK_VERSION: ${SPARK_VERSION}
    image: spark-submit:0.1
    container_name: spark-submit
    depends_on:
      - spark-master
      - spark-worker
      - kafka
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077

  elasticsearch:
    image: elasticsearch:${ELASTIC_VERSION}
    container_name: elasticsearch
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
    restart: unless-stopped

  logstash:
    image: logstash:${ELASTIC_VERSION}
    container_name: logstash
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro,Z
      - ./logstash/templates/tweet_template.json:/usr/share/logstash/templates/tweet_template.json:ro,Z
    ports:
      - 5044:5044
      - 50000:50000/tcp
      - 50000:50000/udp
      - 9600:9600
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
    depends_on:
      - elasticsearch
      - kafka
    restart: unless-stopped

  kibana:
    image: kibana:${ELASTIC_VERSION}
    container_name: kibana
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    restart: unless-stopped